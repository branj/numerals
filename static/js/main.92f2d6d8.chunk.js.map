{"version":3,"sources":["data/Models.tsx","data/Fixtures.tsx","data/Constants.tsx","data/SongFactory.tsx","data/SongRepository.tsx","components/songs/SongList.tsx","components/template/header.tsx","components/template/footer.tsx","components/template/notfound.tsx","utils/Handlers.tsx","components/songs/BarNumeralSelect.tsx","utils/Renderers.tsx","components/songs/SongBarRuler.tsx","components/songs/SongBarNumeralSlider.tsx","components/songs/SongBarEdit.tsx","components/songs/SongBar.tsx","components/songs/SongArrangementActionList.tsx","components/songs/SongArrangement.tsx","components/songs/SongGrid.tsx","components/songs/SongTitle.tsx","components/songs/SongConfigForm.tsx","components/songs/AddNewSongSectionMenu.tsx","components/songs/ViewTogglerSwitch.tsx","components/songs/SongForm.tsx","components/songs/ViewSong.tsx","components/pages/Home.tsx","components/songs/CreateSong.tsx","components/pages/Songwriting101.tsx","components/songs/AddToBarToolbar.tsx","components/songs/SongVersionsTab.tsx","components/songs/SongContainer.tsx","components/songs/SongFormGrid.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["I","II","III","IV","V","ThreeChord","key","label","description","factory","CHORD_1","makeNumeral","CHORD_2","Math","floor","random","CHORD_3","VERSE","makeBar","beats","numeral","CHORUS","TEST_BAR_BEAT_EMPTY","undefined","TEST_BAR_BEAT_I","m","TEST_BAR_BEAT_II","TEST_BAR_BEAT_IV","TEST_BAR_1","uuid","lyrics","TEST_BAR_2","TEST_VERSE","bars","TEST_CHORUS","TEST_BRIDGE","TEST_CONFIG","bpm","TEST_SONG","title","arrangements","config","SONGS","NUMERALS","value","SCALE","SONG_TOOLBAR_ITEMS","icon","BPM","SONG_TYPES","SongFactory","this","TMP_BAR","makeUUID","i","TMP_BEAT","push","type","song","foundType","find","songType","getBars","ceil","dt","Date","getTime","replace","c","r","toString","songState","handler","SongRepository","songId","console","log","KEY","songHistory","localStorage","getItem","songString","JSON","parse","history","getHistory","newHistory","makeHistory","setItem","stringify","SongList","props","getSongs","List","component","aria-label","map","ListItem","button","NavLink","to","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","list","width","fullList","Header","side","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","AppBar","position","Drawer","onClose","className","role","onClick","onKeyDown","color","Divider","Toolbar","IconButton","edge","Typography","variant","Button","Footer","NotFound","NumeralHandler","beatIndex","barIndex","getDescription","BarLyricHandler","lyric","BarRemoveHandler","tmpBars","self","filteredBars","filter","index","arr","BarAddHandler","barNum","songFactory","makeArrangement","BarMoveHandler","up","allTheWay","tmpIndex","totalBars","length","tmpBar","BarDuplicateHandler","newBar","ConfigHandler","SongTitleHandler","updateTitle","BeatHandler","makeBeat","createStyles","margin","BarNumeralSelect","numeralHandler","numeralData","getIndex","selectedNumeral","setNumeral","FormControl","InputLabel","id","finalOffset","renderNumeral","Select","onChange","target","MenuItem","data","NumeralRenderer","ruleLine","positionProp","height","backgroundColor","borderRight","xCoord","transform","textAlign","wrapper","ruleDot","borderRadius","cursor","SongBarRuler","Box","style","thumbClick","marginLeft","paddingTop","paddingBottom","rulerRoot","palette","grey","thumb","border","marginTop","boxShadow","shape","fontSize","badge","active","valueLabel","track","rail","StyledBadge","withStyles","background","padding","Badge","SongBarNumeralSlider","songBar","rulerPosition","setRulerPosition","renderBadge","beat","axis","handle","defaultPosition","x","y","grid","scale","overlap","badgeContent","getValue","print","badges","onMouseLeave","clientX","SongBarEdit","configHandler","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","keepMounted","Boolean","barBox","marginBottom","SongBar","bar","songHandler","clickedLyric","setClickedLyric","tmpLyric","setTmpLyric","submitUpdate","setSubmitUpdate","renderBarColumn","Grid","item","xs","rows","container","alignItems","TextField","fullWidth","defaultValue","SongArrangementActionList","arrangementIndex","minWidth","overflow","SongArrangement","arrangement","Card","CardContent","CardActions","disableSpacing","boardStyle","display","flexWrap","SongGrid","songModel","songChangeHandler","setSong","useEffect","songArrangement","TitleTextField","maxWidth","SongTitle","titleHandler","clickedTitle","setClickedTitle","tmpTitle","setTmpTitle","update","setUpdate","placeholder","inputProps","onChangeCapture","text","formControl","selectEmpty","SongConfigForm","songConfig","songConfigHandler","songKey","setKey","songBpm","setBpm","select","exampleWrapper","actions","name","AddNewSongSectionMenu","eventHandler","setOpen","handleClose","action","e","handleClick","ViewTogglerSwitch","checkedA","checkedB","Switch","checked","toolBar","borderBottom","main","smallToolbarItem","SongForm","snackbarMessage","setSnackbarMessage","handleSongChange","handleSnackBarClose","reason","disableGutters","orientation","Paper","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Fragment","size","ViewSong","useParams","tmpSong","window","location","search","toParse","queryString","songJson","Array","isArray","getSong","parseInt","newSong","cards","heroContent","paper","heroButtons","cardGrid","card","flexDirection","cardMedia","cardContent","footer","Home","Container","align","gutterBottom","paragraph","justify","activeClassName","sm","md","CardMedia","image","CreateSong","template","makeSong","SongWriting101","href","light","toolBarAction","AddToSongBar","items","VersionTabs","indicator","Tabs","VersionTab","fontWeight","typography","fontWeightRegular","borderTop","borderLeft","borderTopRightRadius","fontWeightBold","selected","Tab","disableRipple","SongVersionsTab","versions","setValue","tabs","indicatorColor","textColor","newValue","SongContainer","secondary","SongFormGrid","toolbarItems","AddToBarToolbar","App","createMuiTheme","fontFamily","join","ThemeProvider","direction","exact","path","payt","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92f2d6d8.chunk.js","sourcesContent":["import { SongFactory } from \"./SongFactory\";\nimport { SongHandler } from \"../utils/Handlers\";\n\nexport type SongModel = {\n    uuid : string;\n    title: string;\n    arrangements: SongArrangementModel[];\n    bars : SongBarModel[];\n    config : SongConfig;\n\n};\n\nexport type SongArrangementModel = {\n    uuid : string;\n    label: string;\n    bars : SongBarModel[];\n};\n\nexport type SongBarModel = {\n    uuid : string;\n    lyrics: string;\n    beats: BeatModel[];\n};\n\nexport type SongConfig = {\n    bpm: number;\n    key: number;\n};\n\nexport type SongEditHistory = {\n    songState: SongModel,\n    handler : SongHandler\n};\n\nexport type BeatModel = {\n    numeral : Numeral|undefined\n}\n\nexport interface Numeral {\n    getValue():string,\n    getIndex():number\n}\n\nexport class I implements Numeral {\n    getValue():string{\n        return \"I\";\n    }\n    getIndex():number{\n        return 1;\n    }\n}\n\nexport class II implements Numeral {\n    getValue():string{\n        return \"II\";\n    }\n    getIndex():number{\n        return 2;\n    }\n}\n\nexport class III implements Numeral {\n    getValue():string{\n        return \"III\";\n    }\n    getIndex():number{\n        return 3;\n    }\n}\n\nexport class IV implements Numeral {\n    getValue():string{\n        return \"IV\";\n    }\n    getIndex():number{\n        return 4;\n    }\n}\n\nexport class V implements Numeral {\n    getValue():string{\n        return \"V\";\n    }\n    getIndex():number{\n        return 5;\n    }\n}\n\nexport interface SongType {\n    key: number,\n    label: string,\n    description : string,\n    getBars(factory:SongFactory):SongBarModel[]\n}\n\nexport class ThreeChord implements SongType {\n\n    key = 0\n    label = '3 Chord'\n    description = 'Poppy or sad; Simple 3 chord progression can do it all'\n    getBars(factory:SongFactory):SongBarModel[]{\n   \n        const CHORD_1 = factory.makeNumeral(1)\n        const CHORD_2 = factory.makeNumeral(Math.floor(Math.random() * 5))\n        const CHORD_3 = factory.makeNumeral(Math.floor(Math.random() * 5))\n        \n        \n        const VERSE = factory.makeBar()        \n        VERSE.beats[0].numeral = CHORD_1\n        VERSE.beats[1].numeral = CHORD_2\n        VERSE.beats[2].numeral = CHORD_3\n        VERSE.beats[3].numeral = CHORD_1\n\n        const CHORUS = factory.makeBar()\n        CHORUS.beats[0].numeral = CHORD_3\n        CHORUS.beats[1].numeral = CHORD_1\n        CHORUS.beats[2].numeral = CHORD_2\n        CHORUS.beats[3].numeral = CHORD_1\n\n        return [\n            VERSE,CHORUS, VERSE, CHORUS\n        ]        \n        \n    }\n}\n","import * as m from './Models';\n\nexport const TEST_BAR_BEAT_EMPTY: m.BeatModel = {\n    numeral : undefined\n}\n\nexport const TEST_BAR_BEAT_I: m.BeatModel = {\n    numeral : new m.I()\n}\n\nexport const TEST_BAR_BEAT_II: m.BeatModel = {\n    numeral : new m.II()\n}\n\nexport const TEST_BAR_BEAT_III: m.BeatModel = {\n    numeral : new m.III()\n}\n\nexport const TEST_BAR_BEAT_IV: m.BeatModel = {\n    numeral : new m.IV()\n}\n\nexport const TEST_BAR_BEAT_V: m.BeatModel = {\n    numeral : new m.V()\n}\n\nexport const TEST_BAR_1: m.SongBarModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236700297',\n    lyrics : 'All my Exes live in texas',\n    beats : [TEST_BAR_BEAT_I, TEST_BAR_BEAT_IV, TEST_BAR_BEAT_EMPTY, TEST_BAR_BEAT_EMPTY]\n}\n\nexport const TEST_BAR_2: m.SongBarModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236700294',\n    lyrics : 'Blowing in the weind',\n    beats : [TEST_BAR_BEAT_EMPTY, TEST_BAR_BEAT_IV, TEST_BAR_BEAT_EMPTY, TEST_BAR_BEAT_II]\n}\n\n\nexport const TEST_VERSE: m.SongArrangementModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236700297',\n    label : 'Verse',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_1,\n        TEST_BAR_2\n    ],\n}\n\nexport const TEST_CHORUS: m.SongArrangementModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236700297',\n    label : 'Chorus',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_1,\n        TEST_BAR_2\n    ],\n}\n\nexport const TEST_BRIDGE: m.SongArrangementModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236700297',\n    label : 'Bridge',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_1,\n        TEST_BAR_2\n    ],\n}\n\nexport const TEST_CONFIG: m.SongConfig = {\n    bpm : 4,\n    key: 1\n}\n\nexport const TEST_SONG: m.SongModel = {\n    uuid : '1fe35579-5ce7-46ec-89e0-7e7236704294',\n    title: 'Free Bird',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_1,\n        TEST_BAR_2\n    ],\n    arrangements : [\n        TEST_VERSE,\n        TEST_CHORUS,\n        TEST_BRIDGE\n    ],\n    config : TEST_CONFIG\n};\n\n\nexport const TEST_SONG_2: m.SongModel = {\n    uuid : '1fe35539-5ce7-46ec-89e0-7e7236700294',\n    title: 'Love is a battlefield',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_2,\n        TEST_BAR_1\n    ],\n    arrangements : [\n        TEST_VERSE,\n        TEST_CHORUS,\n        TEST_BRIDGE\n    ],\n    config : TEST_CONFIG\n};\n\nexport const TEST_SONG_3: m.SongModel = {\n    uuid : '1fe35539-5ce7-46ec-89e0-7e7236720294',\n    title: 'Home on the range',\n    bars : [\n        TEST_BAR_1,\n        TEST_BAR_2,\n        TEST_BAR_2\n    ],\n    arrangements : [\n        TEST_VERSE,\n        TEST_CHORUS,\n        TEST_BRIDGE\n    ],\n    config : TEST_CONFIG\n};\n\n\nexport const SONGS = [TEST_SONG, TEST_SONG_2, TEST_SONG_3]\n\n","import * as m from './Models';\n\nimport BarIcon from '@material-ui/icons/Menu'\nimport LyricIcon from '@material-ui/icons/TextFields'\nimport ChordIcon from '@material-ui/icons/MusicNote'\nimport StrumIcon from '@material-ui/icons/ArrowDownward'\nimport DrumIcon from '@material-ui/icons/BlurCircular'\nimport SoundIcon from '@material-ui/icons/Alarm'\nimport React from 'react';\n\n\nexport const NUMERALS = [\n    { key: 1, label: 'I', value : new m.I()},\n    { key: 2, label: 'II', value : new m.II()},\n    { key: 3, label: 'III', value : new m.III()},\n    { key: 4, label: 'IV', value : new m.IV() },\n    { key: 5, label: 'V', value: new m.V()},\n]\n\nexport const SCALE = [\n    { key: 1, label: 'C' },\n    { key: 2, label: 'D' },\n    { key: 3, label: 'E' },\n    { key: 4, label: 'F#' },\n    { key: 5, label: 'G' },\n    { key: 6, label: 'A' },\n    { key: 7, label: 'B' }\n]\n\nexport const SONG_TOOLBAR_ITEMS = [\n    { key: 1, label: 'Bar', icon: <BarIcon />},\n    { key: 2, label: 'Add Chords', icon: <ChordIcon />},\n    { key: 3, label: 'Add Lyric', icon: <LyricIcon />},\n    { key: 1, label: 'Add Strum', icon: <StrumIcon />},\n    { key: 2, label: 'Add Drum', icon: <DrumIcon />},\n    { key: 3, label: 'Add Sound', icon: <SoundIcon />}\n]\n\nexport const BPM = [\n    { key: 2, label: '2' },\n    { key: 4, label: '4' },\n   /* { key: 8, label: '8' },\n    { key: 12, label: '12' }*/\n]\n\nexport const SONG_TYPES = [\n    new m.ThreeChord(),\n]","import {SongConfig, SongBarModel, BeatModel, SongModel, I, II, III, IV, V, Numeral, SongEditHistory, SongArrangementModel} from './Models';\nimport { SONG_TYPES } from './Constants';\nimport { SongHandler } from '../utils/Handlers';\nimport { TEST_BAR_1 } from './Fixtures';\n\nexport class SongFactory {\n    public config: SongConfig\n    constructor(config : SongConfig) {\n        this.config = config\n    }\n\n    makeArrangement(label : string) : SongArrangementModel {\n        const TMP_ARRANGEMENT: SongArrangementModel = {\n            uuid : '1fe35579-5ce7-46ec-89e0-7e7236700297',\n            label : label,\n            bars : [\n               TEST_BAR_1\n            ],\n        }\n        return TMP_ARRANGEMENT\n    }\n\n    makeBar() : SongBarModel {\n        const TMP_BAR : SongBarModel = {\n            uuid : this.makeUUID(),\n            lyrics : '',\n            beats : []\n        }\n        for(var i=0;i<this.config.bpm;i++){\n            const TMP_BEAT : BeatModel = {\n                numeral : undefined\n            }\n            TMP_BAR.beats.push(TMP_BEAT)\n        }\n        return TMP_BAR     \n    }\n    makeBeat() : BeatModel {\n        const TMP_BEAT : BeatModel = {\n            numeral : this.makeNumeral(2)\n        }\n        return TMP_BEAT;   \n    }\n    makeSong(type? : string) : SongModel {\n        \n        var song: SongModel = {\n            uuid: this.makeUUID(),\n            title: 'Give me a title',\n            bars : [\n                \n            ],\n            arrangements : [],\n            config : this.config\n        };\n\n        if (type) {\n            var foundType = SONG_TYPES.find( (songType) => {\n                return songType.label === type\n            })\n            if(foundType) {\n                song.bars = foundType.getBars(this)\n            }\n        }\n\n        return song;     \n    }\n\n    makeNumeral(numeral : number):Numeral|undefined {\n        return [\n            undefined,\n            new I(),\n            new II(),\n            new III(),\n            new IV(),\n            new V()\n        ][Math.ceil(numeral)]\n    }\n\n    makeUUID():string{\n        var dt = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = (dt + Math.random()*16)%16 | 0;\n            dt = Math.floor(dt/16);\n            return (c==='x' ? r :((r&0x3)|0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static makeHistory(songState: SongModel, handler: SongHandler) : SongEditHistory {\n        var songHs: SongEditHistory = {\n            songState: songState,\n            handler: handler\n        };\n        return songHs;\n    }\n}\n","import {SONGS, TEST_SONG} from './Fixtures';\nimport {SongModel, SongEditHistory} from './Models';\nimport { SongHandler } from '../utils/Handlers';\nimport { SongFactory } from './SongFactory';\n\nexport class SongRepository {\n    \n    static getSong(songId? : number) : SongModel {\n        if (songId) {\n            console.log(songId);\n            return SONGS[songId]\n        }\n        console.log(songId);\n        return TEST_SONG     \n    }\n    static getSongs() : SongModel[] {\n        return SONGS     \n    }\n    static getHistory(songId? : string) : SongEditHistory[] {\n        if (songId) {\n            var KEY = 'numeral-app-song-'+ songId +'-history';\n            var songHistory = localStorage.getItem(KEY);\n            var songString = songHistory ? songHistory : '[]';\n            return JSON.parse(songString)\n        } else {\n            return []\n        }\n    }\n\n    static setHistory(song : SongModel, handler : SongHandler) : SongEditHistory[] {\n       var history = SongRepository.getHistory(song.uuid)\n       var newHistory = SongFactory.makeHistory(song, handler)\n       history.push(newHistory)\n       var KEY = 'numeral-app-song-'+ song.uuid +'-history';\n       localStorage.setItem(KEY, JSON.stringify(history));\n       return SongRepository.getHistory(song.uuid)\n    }\n\n\n}\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MusicIcon from '@material-ui/icons/MusicNote';\nimport {SongRepository} from '../../data/SongRepository';\nimport { NavLink } from 'react-router-dom';\n\nconst SongList: React.FC = (props) => { \n  \n  const SONGS = SongRepository.getSongs()\n  \n  return (\n    <List component=\"nav\" aria-label=\"main mailbox folders\">\n        {SONGS.map((song, i) => {        \n          return (\n            <ListItem button\n            key={song.uuid}\n            component={NavLink} to={\"/song/\" + i}\n            >\n              <ListItemIcon>\n                <MusicIcon />\n              </ListItemIcon>\n              <ListItemText primary={song.title} />\n            </ListItem>\n          ) \n         })}\n    </List>\n  );\n}\n\nexport default SongList;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport QueueMusic from '@material-ui/icons/QueueMusic';\nimport AddIcon from '@material-ui/icons/Add';\nimport { NavLink } from \"react-router-dom\";\nimport SongList from \"../songs/SongList\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nfunction Header() {\n  \n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n    });\n\n  const toggleDrawer = (side:any, open:any) => (event:any) => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState({ ...state, [side]: open });\n  };\n\n\n  const sideList = (side:any) => (\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={toggleDrawer(side, false)}\n        onKeyDown={toggleDrawer(side, false)}\n      >\n        <List>\n            <ListItem \n              button \n              key=\"home\"\n              component={NavLink} to=\"/\">\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n\n            <ListItem \n              button \n              key=\"songs\"\n              component={NavLink} to=\"/songs\">\n              <ListItemIcon><QueueMusic /></ListItemIcon>\n              <ListItemText primary=\"Songs\" />\n            </ListItem>\n            \n\n            <ListItem \n              button \n              key=\"create-song\"\n              color=\"secondary\"\n              component={NavLink} to=\"/new/empty\">\n              <ListItemIcon color=\"secondary\"><AddIcon /></ListItemIcon>\n              <ListItemText primary=\"New Song\" />\n            </ListItem>\n        </List>\n        <Divider />\n        <h3>Songs </h3>\n       <SongList />\n      </div>\n  );\n\n  return (\n    <AppBar position=\"static\">\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}\n      </Drawer>\n      <Toolbar>\n        <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Numerals\n        </Typography>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Header;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <nav>\n      \n    </nav>\n  );\n}\n\nexport default Footer;","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Page not found!</h1>\n    </div>\n  );\n}\n\nexport default NotFound;","import { SongModel, Numeral, SongConfig } from \"../data/Models\"\nimport { SongFactory } from \"../data/SongFactory\"\n\nexport abstract class SongHandler {\n    static KEY: string\n    abstract title:string\n    abstract description:string\n    abstract handle(song: SongModel): void\n    abstract getDescription():string\n}\n\nexport class NumeralHandler implements SongHandler {\n    static KEY:string = 'NUMERAL_CHANGE'\n    title:string = \"Changed Numeral\"\n    description:string = \"Numeral Description\";\n\n    beatIndex!: number\n    barIndex!: number\n    numeral!: Numeral\n    \n    getDescription(): string {\n        return \"Changed Numeral @beat-\" +  this.beatIndex + \"-bar-\" + this.barIndex\n    }\n    handle(song: SongModel): void {\n        console.log('Numeral changed', song, this.beatIndex, this.barIndex, this.numeral)\n        song.bars[this.barIndex].beats[this.beatIndex].numeral = this.numeral\n        this.description = this.getDescription()\n    }\n}\n\nexport class BarLyricHandler implements SongHandler {\n    static KEY:string = 'LYRIC_CHANGE'\n    title:string = \"Changed Lryic\"\n    description:string = \"Lyric Description\";\n\n    barIndex!: number\n    lyric!: string\n    getDescription(): string {\n        return \"Alterd lyrics '\" +  this.lyric + \"' @\" + this.barIndex\n    }\n    handle(song: SongModel): void {\n        console.log('Lyric changed...', song, this.barIndex, this.lyric)\n        song.bars[this.barIndex].lyrics = this.lyric\n        this.description = this.getDescription()\n    }\n}\n\nexport class BarRemoveHandler implements SongHandler {\n    static KEY:string = 'BAR_REMOVE'\n    title:string = \"Removed Bar\"\n    description:string = \"Removed a bar\";\n    barIndex!: number\n    getDescription(): string {\n        return \"Removed bar @\" + this.barIndex\n    }\n    handle(song: SongModel): void {\n        console.log(song.bars, this.barIndex)\n        var tmpBars = song.bars\n        var self = this\n        var filteredBars = tmpBars.filter(function(value, index, arr){\n            return index !== self.barIndex\n        });\n        song.bars = filteredBars\n        this.description = this.getDescription()\n    }\n}\n\nexport class BarAddHandler implements SongHandler {\n    static KEY:string = 'BAR_ADD'\n    title:string = \"Added Bar\"\n    description:string = \"Added a bar\";\n    barNum!:number\n    label: string = ''\n    getDescription(): string {\n        return \"Add (\"+ this.barNum + \") Bars!\"\n    }\n    handle(song: SongModel): void {\n        console.log('Adding Bar...', song, this.barNum)\n        var songFactory = new SongFactory(song.config)\n        song.arrangements.push(songFactory.makeArrangement(this.label))\n        this.description = this.getDescription()\n    }\n}\n\nexport class BarMoveHandler implements SongHandler {\n    static KEY:string = 'BAR_MOVE'\n    title:string = \"Bar Moved\"\n    description:string = \"Moved a Bar\";\n    up!: boolean\n    barIndex!: number\n    allTheWay!: boolean\n    getDescription(): string {\n        return \"Moved a bar: Up| \" +  this.up + \", @index| \" + this.barIndex + \" @allTheWay|\" + this.allTheWay\n    }\n    handle(song: SongModel): void {\n        console.log('Moving Bar...', song, this.up, this.barIndex)\n        var tmpIndex = this.barIndex \n        var totalBars = song.bars.length\n        \n        // Zero is the top, so up is down here\n        if (this.up && tmpIndex !== 0) {\n            tmpIndex = this.allTheWay ? 0 : tmpIndex - 1\n        } else if (tmpIndex < totalBars) {\n            tmpIndex = this.allTheWay ? totalBars - 1 : tmpIndex + 1\n        }\n        console.log(song.bars)\n        var tmpBar = song.bars[tmpIndex];\n\n        song.bars[tmpIndex] = song.bars[this.barIndex]\n        song.bars[this.barIndex] = tmpBar\n        console.log(song.bars)\n        this.description = this.getDescription()\n    }\n}\n\nexport class BarDuplicateHandler implements SongHandler {\n    static KEY:string = 'BAR_DUPLICATED'\n    title:string = \"Duplicated Bar\"\n    description:string = \"Duplicated a bar\";\n    barIndex!:number\n    getDescription(): string {\n        return \"Duplicated Bar at index of \" +  this.barIndex\n    }\n    handle(song: SongModel): void {\n       console.log('Duplicating Bar... ()', song, this.barIndex)\n       var songFactory = new SongFactory(song.config)\n       var newBar = {...song.bars[this.barIndex]};\n       newBar.uuid = songFactory.makeUUID()\n       song.bars.push(newBar) \n       this.description = this.getDescription()\n    }\n}\n\nexport class ConfigHandler implements SongHandler {\n    static KEY:string = 'CONFIG_CHANGED'\n    title:string = \"Changed Config\"\n    description:string = \"The Config changed\";\n    config!: SongConfig\n    getTitle(): string {\n        return \"Changed Config\"\n    }\n    getDescription(): string {\n        return \"Changed Config to: Key|\" +  this.config.key + \", BPM|\" + this.config.bpm\n    }\n    handle(song: SongModel): void {\n        console.log('Setting Config...', song, this.config)\n        song.config = this.config\n        this.description = this.getDescription()\n    }\n}\n\nexport class SongTitleHandler implements SongHandler {\n    static KEY:string = 'TITLE_UPDATED'\n    title:string = \"Updated the Title\"\n    description:string = \"Updated the Song's title\";\n    updateTitle!: string\n    getTitle(): string {\n        return \"Changed Song Title\"\n    }\n    getDescription(): string {\n        return \"Changed title to: \" +  this.updateTitle\n    }\n    handle(song: SongModel): void {\n        console.log('Updating title...', this.updateTitle)\n        song.title = this.updateTitle\n        this.description = this.getDescription()\n    }\n}\n\nexport class BeatHandler implements SongHandler {\n    static KEY:string = 'BEAT_ADDED'\n    title:string = \"Added Beat\"\n    description:string = \"Added a Song Beat\";\n    \n    barIndex!: number\n    getDescription(): string {\n        return \"Added a beat at \" +  this.barIndex\n    }\n    handle(song: SongModel): void {\n        console.log('Adding beat...', this.barIndex)\n        var songFactory = new SongFactory(song.config)\n        song.bars[this.barIndex].beats.push(songFactory.makeBeat())\n        this.description = this.getDescription()\n    }\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {NUMERALS, SCALE} from '../../data/Constants';\nimport { Numeral, SongConfig } from '../../data/Models';\nimport { NumeralHandler } from '../../utils/Handlers';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\ninterface NumeralProps {\n    key:  number,\n    label: string,\n    value: Numeral\n}\n\ninterface BarNumeralSelectProps {\n    numeral:  Numeral|undefined,\n    beatIndex: number,\n    barIndex: number,\n    numeralHandler: any,\n    config : SongConfig\n}\n\nconst BarNumeralSelect : React.FC<BarNumeralSelectProps> = ({\n    numeral,\n    beatIndex,\n    barIndex,\n    numeralHandler,\n    config\n  }) => {\n  \n  const classes = useStyles();\n  //console.log(numeral);\n  const numeralData = NUMERALS;\n  const [selectedNumeral, setNumeral] = React.useState((numeral)? numeral.getIndex() : '');\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setNumeral(event.target.value as string);\n\n    var handler = new NumeralHandler();\n    handler.barIndex = barIndex;\n    handler.beatIndex = beatIndex;\n    handler.numeral = NUMERALS[event.target.value as number].value;\n    numeralHandler(handler)\n  };\n\n  const renderNumeral = (numeral: Numeral|undefined, key: number) => {\n    var tmpIndex = (numeral) ? numeral.getIndex() : false\n    if(!tmpIndex){\n        return ('')\n    } \n    //Adjust for array offset\n    tmpIndex = tmpIndex - 1;\n\n    //Check for any transposition. \n    var keyOffset = key - 1;\n    var finalOffset = ((tmpIndex + keyOffset)) % SCALE.length\n    return (\n        <div>\n            {SCALE[finalOffset].label}\n        </div>\n    )\n}\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-simple-select-helper-label\">{renderNumeral(numeral, config.key)}</InputLabel>\n        <Select\n          value={selectedNumeral}\n          onChange={handleChange}\n        >   \n            <MenuItem key='no-thing-selected' value=\"\">\n                <em>-</em>\n            </MenuItem>\n            {numeralData.map(\n                data => {\n                    return (\n                        <MenuItem key={data.label} value={data.key}>{data.label}</MenuItem>\n                    );\n                })\n            }  \n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default BarNumeralSelect;","import { Numeral } from \"../data/Models\";\nimport { SCALE } from \"../data/Constants\";\n\nexport class NumeralRenderer {\n\n    static print( numeral: Numeral|undefined) : string {\n        var tmpIndex = (numeral) ? numeral.getIndex() : false\n        if(!tmpIndex){\n            return ('')\n        } \n        //Adjust for array offset\n        tmpIndex = tmpIndex - 1;\n\n        //Check for any transposition. \n        var keyOffset = 1 - 1;\n        var finalOffset = ((tmpIndex + keyOffset)) % SCALE.length\n\n        return SCALE[finalOffset].label\n    }\n\n}\n","import React from 'react';\n\nimport { Box, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\n\ninterface SongBarRulerProps {\n    xCoord : number,\n    thumbClick : any\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    ruleLine : (positionProp: SongBarRulerProps) => ({\n        height: theme.spacing(12),\n        width: '0px',\n        backgroundColor: 'none',\n        borderRight: \"dashed thin lightgray\",\n        left: positionProp.xCoord\n    }),\n    root: {\n      transform: 'translateZ(0px)',\n      flexGrow: 1,\n      textAlign: 'center'\n    },\n    wrapper: {\n      height: 0,\n      width: 0\n    },\n    ruleDot: {\n        height: 25,\n        width: 25,\n        position: 'relative',\n        left: 0,\n        bottom: 0,\n        backgroundColor: 'lightgray',\n        borderRadius : \"25px\",\n        cursor: 'pointer'\n    },\n  }));\n\nconst SongBarRuler: React.FC<SongBarRulerProps>\n= (props) => { \n  const classes = useStyles(props);\n\n  return (\n    <Box className={classes.wrapper}>   \n        { (props.xCoord > 0) && \n            <Box style={{\"position\":\"absolute\"}} className={classes.ruleLine} >\n                <IconButton onClick={props.thumbClick} style={{marginLeft: '-25%'}} color=\"primary\" aria-label=\"add to shopping cart\">\n                  <AddIcon />\n                </IconButton>\n            </Box>\n        }\n    </Box>\n  );\n}\nexport default SongBarRuler;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { SongBarModel, BeatModel } from '../../data/Models';\nimport { BeatHandler } from '../../utils/Handlers';\nimport { Box, Badge, withStyles } from '@material-ui/core';\nimport {NumeralRenderer} from '../../utils/Renderers';\nimport Draggable from 'react-draggable';\nimport SongBarRuler from './SongBarRuler';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles(\n    {\n      wrapper : {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(),\n        width: '100%',\n      },\n      root: {\n        height: theme.spacing(2.5),\n        width: '100%',\n        margin: theme.spacing(1),\n      },\n      rulerRoot: {\n        backgroundColor: theme.palette.grey[400],\n        //height: theme.spacing(1),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(1.5),\n        width: '100%',\n        margin: theme.spacing(0),\n        cursor: 'pointer'\n      },\n      thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus,&:hover,&$active': {\n          boxShadow: 'inherit',\n        },\n      },\n      shape: {\n        //backgroundColor: theme.palette.primary.main,\n        width: 20,\n        height: 20,\n        fontSize: '20px'\n      },\n      badge: {\n        marginTop : theme.spacing(1)\n      },\n      active: {},\n      valueLabel: {\n        left: 'calc(-50% + 4px)',\n      },\n      track: {\n        height: 3,\n        borderRadius: 4,\n      },\n      rail: {\n        height: 8,\n        borderRadius: 4,\n      }\n    }\n  ),\n);\n\nconst StyledBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      background: \"none\",\n      border : 'solid thin',\n      padding: '1px',\n      fontSize : '8px'\n    },\n  }),\n)(Badge);\n\ninterface NumeralSliderProps {\n  songBar : SongBarModel,\n  barIndex: number,\n  numeralHandler: any\n}\n\nconst SongBarNumeralSlider: React.FC<NumeralSliderProps> = ({\n  songBar,\n  barIndex,\n  numeralHandler\n}) => {\n  \n  const classes = useStyles();\n  const GRID_SNAP = 50;\n  const [rulerPosition, setRulerPosition] = React.useState(0)\n\n  function renderBadge(beat: BeatModel, beatIndex: number) {\n    return (\n      <Draggable\n          key={\"draggable-bar-index-\" + barIndex + \"-beat-\" + beatIndex}\n          axis=\"x\"\n          handle=\".handle\"\n          defaultPosition={{x: 0, y: 0}}\n          position={undefined}\n          grid={[GRID_SNAP, GRID_SNAP]}\n          scale={1}\n          >\n            <StyledBadge \n              color=\"secondary\" \n              overlap=\"circle\"\n              className={classes.badge} \n              key={\"numeral-\" + barIndex + \"-bar-\"+ beatIndex} \n              badgeContent={beat.numeral?.getValue()}> \n              <div className={classes.shape}>{NumeralRenderer.print(beat.numeral)}</div>\n           </StyledBadge>\n        </Draggable>   \n    )\n  }\n\n\n  const showRuler = (data:any) => {\n    setRulerPosition(data.clientX)\n  }\n\n  const hideRuler = (data:any) => {\n    setRulerPosition(0)\n  }\n\n  var badges = [];\n  for (var i = 0; i < songBar.beats.length; i++) {\n    badges.push(renderBadge(songBar.beats[i], i))\n  }\n\n  const addNumeralBadge = (event: any) => {\n    var handler = new BeatHandler();\n    handler.barIndex = barIndex\n    numeralHandler(handler)\n  };\n\n  return (\n    <Box className={classes.wrapper} onMouseLeave={hideRuler}>\n      <SongBarRuler xCoord={rulerPosition} thumbClick={addNumeralBadge} />\n      <Box onClick={showRuler}  className={classes.rulerRoot}>\n      </Box>\n      <Box className={classes.root}>\n          {badges}\n      </Box>\n    </Box>\n  );\n}\n\n\nexport default SongBarNumeralSlider;\n\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { BarRemoveHandler, BarDuplicateHandler, BarMoveHandler } from '../../utils/Handlers';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport interface BarEditProps {\n    barIndex : number,\n    configHandler : any\n}\n\nconst SongBarEdit: React.FC<BarEditProps> = ({\n    barIndex,\n    configHandler\n  }) =>  {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  \n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDelete = () => {\n    setAnchorEl(null);\n    var handler = new BarRemoveHandler();\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  const handleDuplicate = () => {\n    setAnchorEl(null);\n    var handler = new BarDuplicateHandler();\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  const handleUp = () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = true;\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  const handleDown= () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = false;\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  const handleToTop = () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = true;\n    handler.allTheWay = true;\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  const handleToBottom= () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = false;\n    handler.allTheWay = true;\n    handler.barIndex = barIndex;\n    configHandler(handler)\n  };\n\n  return (\n    <>\n      <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"secondary\" aria-label=\"add an alarm\">\n        <MoreIcon fontSize=\"large\" />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n      >\n        <MenuItem onClick={handleDelete}>\n            Delete\n        </MenuItem>\n        <MenuItem onClick={handleDuplicate}>\n            Duplicate\n        </MenuItem>\n        <MenuItem onClick={handleUp}>Move Up</MenuItem>\n        <MenuItem onClick={handleDown}>Move Down</MenuItem>\n        <MenuItem onClick={handleToTop}>Move To Top</MenuItem>\n        <MenuItem onClick={handleToBottom}>Move To Bottom</MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nexport default SongBarEdit;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport BarNumeralSelect from './BarNumeralSelect';\nimport SongBarNumeralSlider from './SongBarNumeralSlider';\nimport { SongBarModel, BeatModel, SongConfig } from '../../data/Models';\nimport SongBarEdit from './SongBarEdit';\nimport { BarLyricHandler } from '../../utils/Handlers';\nimport DragIcon from '@material-ui/icons/DragIndicator';\nimport { makeStyles, Theme, createStyles, Divider} from '@material-ui/core';\n\n\nexport interface BarProps {\n    bar : SongBarModel,\n    songHandler : any,\n    barIndex : number,\n    config : SongConfig\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    barBox: {\n      boxShadow: \"none\",\n      //border: \"dotted thin \" + theme.palette.primary.light,\n      padding: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n      width: '100%'\n    },\n  }),\n);\n\nconst SongBar: React.FC<BarProps> = ({\n  bar,\n  songHandler,\n  barIndex,\n  config\n}) => {\n  const classes = useStyles();\n  const [clickedLyric, setClickedLyric] = React.useState(false)\n  const [tmpLyric, setTmpLyric] = React.useState('')\n  const [submitUpdate, setSubmitUpdate] = React.useState(false)\n\n  const handleLyricUpdate = (event:any) => {\n    \n    if(!submitUpdate){ return  }\n\n    var handler = new BarLyricHandler()\n    handler.lyric = tmpLyric\n    handler.barIndex = barIndex\n\n    songHandler(handler);\n    setClickedLyric( ! clickedLyric )\n    setSubmitUpdate(false)\n  }\n\n  const handleLyricEdit = (event:any) => {\n    setSubmitUpdate(true)\n    setTmpLyric(event.target.value)\n  }\n\n  function renderBarColumn(beat: BeatModel, barIndex: number, beatIndex: number) {\n    return <Grid key={\"griditem-\" + barIndex + \"-\" + beatIndex} item xs={3} >\n              <BarNumeralSelect key={\"select-\" + barIndex + \"-\" + beatIndex} config={config} numeralHandler={songHandler} numeral={(beat.numeral) ? beat.numeral: undefined} barIndex={barIndex} beatIndex={beatIndex} />\n           </Grid>\n  }\n\n  const renderDivider = () => {\n    return <Divider variant=\"middle\" />\n  }\n\n  var rows = [];\n  for (var i = 0; i < config.bpm; i++) {\n    rows.push(renderBarColumn(bar.beats[i], barIndex, i))\n  }\n\n  return (\n    \n    <Grid \n      className={classes.barBox}\n      container \n      spacing={0} \n      alignItems=\"center\"\n    >\n        <Grid item xs={1}>\n          <DragIcon fontSize=\"small\" color=\"disabled\"/>\n        </Grid>\n        <Grid item xs={10}>\n          <Grid container spacing={0}>\n            <SongBarNumeralSlider barIndex={barIndex} songBar={bar} numeralHandler={songHandler} />\n          </Grid>\n          <Grid container spacing={0} alignItems=\"center\">\n                  <TextField \n                  key={\"numeral-bar-id-\" + barIndex}\n                  fullWidth\n                  variant=\"standard\"\n                  defaultValue={bar.lyrics ? bar.lyrics : ''}\n                  onChange={handleLyricEdit}\n                  onMouseLeave={handleLyricUpdate}\n                  />\n          </Grid>\n        </Grid>\n        <Grid item xs={1}>\n          <SongBarEdit configHandler={songHandler} barIndex={barIndex} />\n        </Grid>\n        {renderDivider()}\n    </Grid>\n  );\n}\n\nexport default SongBar;","import React from 'react';\nimport { BarRemoveHandler, BarDuplicateHandler, BarMoveHandler } from '../../utils/Handlers';\nimport {Button, Menu, MenuItem, makeStyles, Theme, createStyles } from '@material-ui/core';\n\ninterface BarEditProps {\n    arrangementIndex : number,\n    configHandler : any\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%'\n    },\n  }),\n);\n\nconst SongArrangementActionList: React.FC<BarEditProps> = ({\n    arrangementIndex,\n    configHandler\n  }) =>  {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDelete = () => {\n    setAnchorEl(null);\n    var handler = new BarRemoveHandler();\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  const handleDuplicate = () => {\n    setAnchorEl(null);\n    var handler = new BarDuplicateHandler();\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  \n  const handleUp = () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = true;\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  const handleDown= () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = false;\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  const handleToTop = () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = true;\n    handler.allTheWay = true;\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  const handleToBottom= () => {\n    setAnchorEl(null);\n    var handler = new BarMoveHandler();\n    handler.up = false;\n    handler.allTheWay = true;\n    handler.barIndex = arrangementIndex;\n    configHandler(handler)\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Edit\n      </Button>\n      <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n      >\n          <MenuItem onClick={handleDuplicate}>Duplicate</MenuItem>\n          <MenuItem onClick={handleDelete}>Delete</MenuItem>\n          <MenuItem >Lock/Unlock</MenuItem>\n          <MenuItem >Inspiration</MenuItem>\n          <MenuItem onClick={handleUp}>Move Up</MenuItem>\n          <MenuItem onClick={handleDown}>Move Down</MenuItem>\n          <MenuItem onClick={handleToTop}>Move To Top</MenuItem>\n          <MenuItem onClick={handleToBottom} >Move To Bottom</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n\nexport default SongArrangementActionList;\n","import React from 'react';\nimport { SongArrangementModel, SongConfig, SongBarModel } from '../../data/Models';\nimport { makeStyles, Theme, createStyles, Card, CardContent, Typography, CardActions } from '@material-ui/core';\nimport SongBar from './SongBar';\nimport SongArrangementActionList from './SongArrangementActionList';\n\nexport interface ArrangementProps {\n    arrangement : SongArrangementModel,\n    songHandler : any,\n    arrangementIndex : number,\n    config : SongConfig\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        minWidth: 275,\n        width: '100%',\n        overflow:'visible'\n    },\n    title: {\n        fontSize: 14,\n    }\n  }),\n);\n\nconst SongArrangement: React.FC<ArrangementProps> = ({\n  arrangement,\n  songHandler,\n  arrangementIndex,\n  config\n}) => {\n    const classes = useStyles();\n    function renderBar(songBar: SongBarModel, barIndex: number) {\n        return <SongBar key={\"song-bar-\" + barIndex + songBar.uuid}  config={config} bar={songBar} barIndex={barIndex} songHandler={songHandler}/>\n    }\n\n    const rows = []\n    for (let i = 0; i < arrangement.bars.length; i += 1) {    \n        rows.push(renderBar(arrangement.bars[i], i))\n    }\n    return <Card variant=\"outlined\" className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" >\n                        {arrangement.label}\n                    </Typography>\n                    {rows}\n                </CardContent>\n                <CardActions disableSpacing>\n                    <SongArrangementActionList arrangementIndex={arrangementIndex} configHandler={songHandler} />\n                </CardActions>\n            </Card>\n  \n}\n\nexport default SongArrangement;","import React from 'react'\nimport {SongModel, SongArrangementModel} from '../../data/Models';\nimport SongArrangement from './SongArrangement';\n\nexport interface GridProps {\n    song: SongModel,\n    songChangeHandler: any\n}\n\n/** Styling properties applied to the board element */\nconst boardStyle: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexWrap: 'wrap',\n}\n\n/**\n * The chessboard component\n * @param props The react props\n */\nconst SongGrid: React.FC<GridProps> = ({\n    song: songModel,\n    songChangeHandler : numeralHandler\n}) => {\n    \n    const [songState, setSong] = React.useState<SongModel>(songModel)\n    React.useEffect(() => { setSong(songModel) }, [songModel]);    \n    function renderArrangement(songArrangement: SongArrangementModel, arrangementIndex: number) {\n        return <SongArrangement key={\"song-arrangement-\" + arrangementIndex}  config={songModel.config} arrangement={songArrangement} arrangementIndex={arrangementIndex} songHandler={numeralHandler}/>\n    }\n\n    \n    const rows = []\n    for (let i = 0; i < songState.arrangements.length; i += 1) {\n        rows.push(renderArrangement(songState.arrangements[i], i))\n     }\nreturn <div style={boardStyle}>{rows}</div>\n  \n}\nexport default SongGrid;\n","import React from 'react';\nimport { SongTitleHandler } from '../../utils/Handlers';\nimport { TextField, withStyles } from '@material-ui/core';\n\n\ninterface TitleEditProps {\n    title : string,\n    titleHandler : any\n}\n\nconst TitleTextField = withStyles({\n    root: {\n      border : 'none',\n      marginTop : '8px',\n      marginBottom : '8px',\n      width : '100%',\n      maxWidth : '100%',\n      '& input' : {\n        padding : '8.5px 14px;',\n        fontSize : '36px',\n        border : 'none'\n      },\n      '& .MuiInput-underline:before' : {\n        padding : '8.5px 14px;',\n        fontSize : '36px',\n        border : 'none'\n      },\n    },\n})(TextField);\n\nconst SongTitle: React.FC<TitleEditProps> = ({\n    title,\n    titleHandler\n  }) => {\n\n    const [clickedTitle, setClickedTitle] = React.useState(false)\n    const [tmpTitle, setTmpTitle] = React.useState('')\n    const [update, setUpdate] = React.useState(false)\n    \n    const validateText = (text:string) => {\n        return (text.length > 0 && text.length < 64);\n    }\n\n    const handleChange = (data:any) => {\n        if(validateText(data.target.value)) {\n            setTmpTitle(data.target.value)\n            setUpdate(true)\n        }\n    }; \n\n    const handleSave = () => {\n\n        if(!update){return}\n\n        var handler = new SongTitleHandler();\n        handler.title = tmpTitle;\n        titleHandler(handler)\n        setClickedTitle(!clickedTitle)\n        setUpdate(false)\n    }\n\n   return (\n          <TitleTextField\n            key=\"song-title\"\n            placeholder=\"Untitled song\"\n            inputProps={{ 'aria-label': 'Create a song name' }}\n            onChangeCapture={handleChange}\n            onMouseLeave={handleSave}\n            defaultValue={title}\n        />\n  );\n}\n\nexport default SongTitle;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {SCALE, BPM} from '../../data/Constants';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { SongConfig } from '../../data/Models';\nimport { ConfigHandler } from '../../utils/Handlers';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface SongConfigProps {\n  songConfig:  SongConfig,\n  songConfigHandler: any,\n}\n\nconst SongConfigForm:  React.FC<SongConfigProps> = ({\n  songConfig,\n  songConfigHandler\n}) => { \n    const classes = useStyles();\n    const [songKey, setKey] = React.useState(1);\n    const [songBpm, setBpm] = React.useState(2);  \n\n    const handleKeyChange = (event:any) => {\n      setKey(event.target.value);\n      songConfig.key = event.target.value\n      var handler = new ConfigHandler();\n      handler.config = songConfig;\n      songConfigHandler(handler);\n    };\n\n    const handleBpmChange = (event:any) => {\n      setBpm(event.target.value);\n      songConfig.bpm = event.target.value\n      var handler = new ConfigHandler();\n      handler.config = songConfig;\n      songConfigHandler(handler);\n    };\n  \n    return (\n      <div>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <TextField\n                  key=\"song-config-key\"\n                  id=\"song-config-key\"\n                  select\n                  placeholder=\"Key\"\n                  value={songKey}\n                  onChange={handleKeyChange}\n              >\n                {SCALE.map((value, i) => { \n                  return (\n                    <MenuItem key={value.key} value={value.key}>{value.label}</MenuItem>\n                  ) \n                })}\n              </TextField>\n          </FormControl>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n              <TextField\n                  id=\"song-config-bpm\"\n                  select\n                  placeholder=\"BPM\"\n                  value={songBpm}\n                  onChange={handleBpmChange}\n              >\n                {BPM.map((value, i) => { \n                  return (\n                    <MenuItem key={value.key} value={value.key}>{value.label}</MenuItem>\n                  ) \n                })}\n              </TextField>\n          </FormControl>\n      </div>\n    );\n}\n\n\nexport default SongConfigForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FourBarIcon from '@material-ui/icons/Filter4';\nimport TwoBarIcon from '@material-ui/icons/Filter2';\nimport OneBarIcon from '@material-ui/icons/Filter1';\nimport AddIcon from '@material-ui/icons/Add';\nimport { BarAddHandler } from '../../utils/Handlers';\nimport { Menu, MenuItem, ListItemIcon, Typography, Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    transform: 'translateZ(0px)',\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  exampleWrapper: {\n    position: 'relative',\n    marginTop: theme.spacing(-1.5),\n    height: 79,\n  },\n}));\n\nconst actions = [\n  { icon: <OneBarIcon />, name: 'Verse', value: 0 },\n  { icon: <TwoBarIcon />, name: 'Chourus', value: 1 },\n  { icon: <FourBarIcon />, name: 'Bridge', value: 2 },\n  /*{ icon: <OneBarIcon />, name: '1 Bar', value: 1 },\n  { icon: <TwoBarIcon />, name: '2 Bars', value: 2 },\n  { icon: <FourBarIcon />, name: '4 Bars', value: 4 },*/\n];\n\nexport interface AddSongSectionProps {\n  eventHandler : any\n}\n\nconst AddNewSongSectionMenu : React.FC<AddSongSectionProps> = ({\n  eventHandler\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);   \n    setOpen(false);\n  };\n\n  const handleOpen = (event:React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget); \n    setOpen(true);\n  };\n\n  const handleClick = (barNum:number, event:React.MouseEvent<HTMLElement>) => {\n    handleClose()\n    \n    var handler = new BarAddHandler();\n    handler.barNum = barNum;\n    handler.label = actions[barNum].name;\n    eventHandler(handler);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.exampleWrapper}>\n        <Button variant=\"contained\" color=\"secondary\"  onClick={handleOpen}>\n          <AddIcon />\n        </Button>\n        <Menu\n        id=\"simple-menu\"\n        keepMounted\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        >\n            {actions.map(action => (\n            <MenuItem\n              key={action.name}\n      \n              onClick={(e)=>{handleClick(action.value, e)}}>\n                    <ListItemIcon>\n                        {action.icon}\n                    </ListItemIcon>\n                    <Typography variant=\"inherit\">{action.name}</Typography>\n              </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n\nexport default AddNewSongSectionMenu;","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function ViewTogglerSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport SongGrid from './SongGrid';\nimport SongTitle from './SongTitle';\nimport SongConfigForm from './SongConfigForm';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { SongModel } from '../../data/Models';\nimport { SongHandler } from '../../utils/Handlers';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport BackIcon from '@material-ui/icons/Undo';\nimport ForwardIcon from '@material-ui/icons/Redo';\nimport { AppBar, createStyles, makeStyles, Theme,Snackbar } from '@material-ui/core';\n//import { SongRepository } from '../../data/SongRepository';\nimport AddNewSongSectionMenu from './AddNewSongSectionMenu';\nimport ViewTogglerSwitch from './ViewTogglerSwitch';\n\nexport interface SongProps {\n  song: SongModel\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolBar: {\n      boxShadow: \"none\",\n      borderBottom: \"solid thin \" + theme.palette.primary.main\n    },\n    smallToolbarItem: {\n      marginRight: theme.spacing(1),\n      fontSize : 'large',\n    },\n  }),\n);\n\nconst SongForm: React.FC<SongProps> = ({\n  song: songModel,\n}) => {\n\n  const classes = useStyles();\n  const [song, setSong] = React.useState<SongModel>(songModel)\n  //const [songHistory, setSongHistory] = React.useState<SongEditHistory[]>(SongRepository.getHistory(song.uuid))\n  const [open, setOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n  React.useEffect(() => {\n    localStorage.setItem('song', JSON.stringify(song));\n    //console.log(SongRepository.getHistory(song.uuid))\n  }, [song]);\n\n  \n  /*React.useEffect(() => {\n    console.log('updated song history')\n  }, [songHistory]);*/\n  \n\n  const handleSongChange = (handler:SongHandler) => {\n    console.log(\"Song Change Fired\", handler.title, handler.description)\n    //Make history item of what it was before this was ran. \n    \n    handler.handle(song)\n    setSong({ ...song })\n    //setSongHistory({...SongRepository.setHistory(song, handler)})\n    setSnackbarMessage(handler.title)\n    setOpen(true);\n  };\n\n  /*\n  const handleClickSave = () =>  {\n    var songs = localStorage.getItem('songs');\n    var songString = songs ? songs : '[]';\n    var parsedSongs = JSON.parse(songString)\n    parsedSongs.push(song)\n    localStorage.setItem('songs', JSON.stringify(parsedSongs));\n  }*/\n\n  const handleSnackBarClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n\n  return (\n    <>\n      <AppBar className={classes.toolBar} position='sticky' color=\"inherit\">\n        <Toolbar disableGutters={true} variant=\"dense\">\n          <div>\n            <IconButton className={classes.smallToolbarItem}>\n              <BackIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton className={classes.smallToolbarItem}>\n              <ForwardIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n\n            <Divider orientation=\"vertical\" />\n\n            <SongConfigForm songConfigHandler={handleSongChange} songConfig={song.config} />\n\n            <Divider orientation=\"vertical\" />\n            \n            <ViewTogglerSwitch />\n\n            <Divider orientation=\"vertical\" />\n\n        </Toolbar>\n        <Divider />\n        <Toolbar disableGutters={true} variant=\"dense\">\n          <SongTitle title={song.title} titleHandler={handleSongChange} />\n        </Toolbar>\n\n      </AppBar>\n\n      <Paper>\n          <SongGrid song={song} songChangeHandler={handleSongChange} />\n      </Paper>\n      \n      <AddNewSongSectionMenu eventHandler={handleSongChange} />\n\n      <Snackbar \n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleSnackBarClose}\n        message={snackbarMessage}\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={handleSnackBarClose}>\n              UNDO\n            </Button>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackBarClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n\n    </>\n  );\n}\n\nexport default SongForm;","import React from 'react';\n\nimport { SongModel } from '../../data/Models';\nimport { SongRepository } from '../../data/SongRepository';\nimport SongForm from './SongForm';\nimport { useParams } from 'react-router';\nimport { TEST_SONG } from '../../data/Fixtures';\nimport queryString from 'query-string'\n\nconst ViewSong: React.FC = (props) => {\n  let { id } = useParams();\n  var tmpSong = TEST_SONG\n  const [song, setSong] = React.useState<SongModel>(tmpSong)\n  console.log(window.location.search);\n  var parseString = queryString.parse(window.location.search)\n  var toParse = parseString.songJson;\n\n  if (toParse !== undefined && toParse !== null && !Array.isArray(toParse)) {\n    var newSong = JSON.parse(toParse);\n    console.log(newSong)\n    //if(newSong != tmpSong) {\n        //setSong(newSong)\n    //}\n  } else if (id !== undefined && song !== tmpSong) {\n    setSong(SongRepository.getSong(parseInt(id)))\n  }\n\n  return (\n    <SongForm song={song} />\n  );\n}\n\nexport default ViewSong;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { Typography, Grid, Button, Card, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SONG_TYPES } from '../../data/Constants';\nimport { NavLink } from 'react-router-dom';\n\nconst cards = SONG_TYPES; \nconst useStyles = makeStyles(theme => ({\n icon: {\n   marginRight: theme.spacing(2),\n },\n heroContent: {\n   backgroundColor: theme.palette.background.paper,\n   padding: theme.spacing(8, 0, 6),\n },\n heroButtons: {\n   marginTop: theme.spacing(4),\n },\n cardGrid: {\n   paddingTop: theme.spacing(8),\n   paddingBottom: theme.spacing(8),\n },\n card: {\n   height: '100%',\n   display: 'flex',\n   flexDirection: 'column',\n },\n cardMedia: {\n   paddingTop: '56.25%', // 16:9\n },\n cardContent: {\n   flexGrow: 1,\n },\n footer: {\n   backgroundColor: theme.palette.background.paper,\n   padding: theme.spacing(6),\n },\n}));\n\nconst Home: React.FC = (props) => { \n   \n  const classes = useStyles();\n  return (\n   <div>\n   <div className={classes.heroContent}>\n     <Container maxWidth=\"sm\">\n       <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n         Numerals\n       </Typography>\n       <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n         Numerals simplfies songwriting process by exposing the fundamentals in an easy to use interface. Use some of the pre-configured templates below to get going!\n       </Typography>\n       <div className={classes.heroButtons}>\n         <Grid container spacing={2} justify=\"center\">\n           <Grid item>\n           <NavLink activeClassName=\"active\" to=\"/new/empty\">\n             <Button variant=\"contained\" color=\"primary\">\n               Build Now\n             </Button>\n             </NavLink>\n           </Grid>\n           <Grid item>\n            <NavLink activeClassName=\"active\" to={\"/songwriting101\"}>\n               <Button variant=\"outlined\" color=\"primary\">\n                  Songwriting 101\n               </Button>\n             </NavLink>\n           </Grid>\n         </Grid>\n       </div>\n     </Container>\n   </div>\n   <Container className={classes.cardGrid} maxWidth=\"md\">\n     {/* End hero unit */}\n     <Grid container spacing={4}>\n       {cards.map(card => (\n         <Grid item key={card.key} xs={12} sm={6} md={4}>\n           <Card className={classes.card}>\n             <CardMedia\n               className={classes.cardMedia}\n               image=\"https://source.unsplash.com/random\"\n               title=\"Image title\"\n             />\n             <CardContent className={classes.cardContent}>\n               <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {card.label}\n               </Typography>\n               <Typography>\n                  {card.description}\n               </Typography>\n             </CardContent>\n             <CardActions>\n              <NavLink activeClassName=\"active\" to={\"/new/\" + card.label}>\n                <Button variant=\"contained\" size=\"small\" color=\"primary\">\n                 Get started\n               </Button>\n              </NavLink>\n             </CardActions>\n           </Card>\n         </Grid>\n       ))}\n     </Grid>\n   </Container>\n </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nimport {SongConfig} from '../../data/Models';\nimport {SongFactory} from '../../data/SongFactory';\nimport SongForm from './SongForm';\nimport { useParams } from 'react-router';\n\nconst CreateSong: React.FC = (props) => { \n  let { template } = useParams();\n\n  var songConfig : SongConfig = {\n    bpm : 4,\n    key: 1\n  }\n\n  var songFactory = new SongFactory(songConfig)\n  var song = songFactory.makeSong( template )\n\n  return (\n    <SongForm song={song} />\n  );\n}\n\nexport default CreateSong;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n icon: {\n   marginRight: theme.spacing(2),\n },\n heroContent: {\n   backgroundColor: theme.palette.background.paper,\n   padding: theme.spacing(8, 0, 6),\n },\n heroButtons: {\n   marginTop: theme.spacing(4),\n },\n cardGrid: {\n   paddingTop: theme.spacing(8),\n   paddingBottom: theme.spacing(8),\n },\n card: {\n   height: '100%',\n   display: 'flex',\n   flexDirection: 'column',\n },\n cardMedia: {\n   paddingTop: '56.25%', // 16:9\n },\n cardContent: {\n   flexGrow: 1,\n },\n footer: {\n   backgroundColor: theme.palette.background.paper,\n   padding: theme.spacing(6),\n },\n}));\n\nconst SongWriting101: React.FC = (props) => { \n   \n  const classes = useStyles();\n  return (\n   <div>\n   <div className={classes.heroContent}>\n     <Container maxWidth=\"sm\">\n       <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n         Songwriting 101\n       </Typography>\n       <Typography variant=\"body1\" align=\"center\" color=\"textPrimary\" paragraph>\n            Numerals is primarily based off of the the <a href=\"https://en.wikipedia.org/wiki/Circle_of_fifths\">Circle of Fifths</a> and the latent <a href=\"https://en.wikipedia.org/wiki/Circle_of_fifths\">chord progressions</a> they unlock. \n       </Typography>\n       <Typography variant=\"body1\" align=\"center\" color=\"textPrimary\" paragraph>\n          Realistically, there is no hard and fast rule for creating a song...it's an artisitc endeavor which is impossible to 'program', that said, \n          given all those possibilities that 'next' chord for a verse, chorus, bridge, or just something to go along\n          with some guitar strums.\n       </Typography>\n       <Typography variant=\"body1\" align=\"center\" color=\"textPrimary\" paragraph>\n          Enter Numerals, a concept I've implemented privately over the years, but punched up for public consumption. Simply choose the key of your song, and start building out your song...\n       </Typography>\n       <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph>\n        So why should I use \"Numerals\"?\n       </Typography>\n       <Typography variant=\"body1\" align=\"center\" color=\"textPrimary\" paragraph>\n          Numerals takes the the guess work out finding out where songs should go. It exploits the Circle of Fifths to suggest and simply the songwriting process...You need a new bridge, just \n          say you need a Bridge, and your off.\n       </Typography>\n       <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" paragraph>\n          It may not always make your song better, but it will make you a better song writer. \n       </Typography>\n     </Container>\n   </div>\n </div>\n  );\n}\n\nexport default SongWriting101;","import React from 'react';\nimport { makeStyles, Theme, createStyles, Box, IconButton} from '@material-ui/core';\n\nexport interface AddToSongBarProps {\n    items : any,\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolBar: {\n      boxShadow: \"none\",\n      border: \"solid thin \" + theme.palette.primary.light,\n      padding: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n      width: '66px',\n      textAlign: 'center',\n    },\n    toolBarAction : {\n        margin: theme.spacing(1),\n    }\n  }),\n);\n\nconst AddToSongBar: React.FC<AddToSongBarProps> = ({\n  items\n}) => {\n    \n  const classes = useStyles();\n\n  function renderAddTo(item:any, key:number) {\n    return  <Box key={key} className={classes.toolBarAction}>\n                <IconButton>\n                    {item.icon}\n                </IconButton>\n            </Box>\n}\n\n  var rows = [];\n  for (var i = 0; i < items.length; i++) {\n    rows.push(renderAddTo(items[i], i))\n  }\n\n  return (\n    \n    <Box className={classes.toolBar} component=\"div\">\n        <h4>ADD</h4>\n        {rows}\n     </Box>\n  );\n}\n\nexport default AddToSongBar;","import React from 'react';\nimport {Theme, createStyles, IconButton, Tabs, Tab, Grid, withStyles} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport interface SongVersionsTabProps {\n    versions : any,\n}\n\nconst VersionTabs = withStyles({\n  root: {\n  },\n  indicator: {\n    backgroundColor: 'yellow ',\n  },\n})(Tabs);\n\nconst VersionTab = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      //background : theme.palette.primary.dark,\n      //textTransform: 'none',\n      color : theme.palette.grey[900],\n      minWidth: 50,\n      padding: 0,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginRight: theme.spacing(0),\n      borderTop : 'solid thin',\n      borderLeft : 'solid thin',\n      borderRight : 'solid thin',\n      borderTopRightRadius : '25px',\n      background : theme.palette.primary.light,\n      '&$selected': {\n        fontWeight: theme.typography.fontWeightBold,\n      },\n      '&:focus': {\n        color: '#40a9ff',\n      },\n    },\n    selected: {},\n  }),\n)((props: any) => <Tab disableRipple {...props} />);\n\nconst SongVersionsTab: React.FC<SongVersionsTabProps> = ({\n  versions\n}) => {\n    \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  function renderTab(item:any,key:number) {\n    return  <VersionTab key={\"version-\" + key} label={\"v\" + item} />\n  }\n\n  var tabs = [];\n  for (var i = 0; i < versions.length; i++) {\n    tabs.push(renderTab(versions[i],i))\n  } \n\n  return (\n    <Grid container spacing={0}>\n        <Grid item xs={1}>\n            <IconButton aria-label=\"Save song at version\" color=\"primary\">\n                <AddIcon fontWeight=\"900\" />\n            </IconButton>\n        </Grid>  \n        <Grid item xs={11}>\n            <VersionTabs\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                {tabs}\n            </VersionTabs>\n        </Grid>\n    </Grid>\n  );\n}\n\nexport default SongVersionsTab;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport SongVersionsTab from './SongVersionsTab';\nimport SongForm from './SongForm';\nimport { TEST_SONG } from '../../data/Fixtures';\nimport { Divider } from '@material-ui/core';\nconst SongContainer: React.FC = (props) => { \n\n  return (\n    <Container maxWidth=\"sm\"> \n        <SongVersionsTab versions={[1,2,3]}/>\n        <Divider />\n        <SongForm song={TEST_SONG}/>\n    </Container>\n  );\n}\n\nexport default SongContainer;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AddToBarToolbar from './AddToBarToolbar';\nimport { SONG_TOOLBAR_ITEMS } from '../../data/Constants';\nimport SongContainer from './SongContainer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function SongFormGrid() {\n  const classes = useStyles();\n  var toolbarItems = SONG_TOOLBAR_ITEMS\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={2}>\n          <AddToBarToolbar items={toolbarItems} />\n        </Grid>\n        <Grid item xs={8}>\n          <SongContainer />\n        </Grid>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/template/header';\nimport Footer from './components/template/footer';\nimport NotFound from './components/template/notfound';\nimport SongList from './components/songs/SongList';\nimport ViewSong from './components/songs/ViewSong';\nimport Home from './components/pages/Home';\nimport CreateSong from './components/songs/CreateSong';\nimport SongWriting101 from './components/pages/Songwriting101';\nimport 'typeface-roboto';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport SongFormGrid from './components/songs/SongFormGrid';\n\nconst App: React.FC = () => {\n\n  /**\n   * Here's color pallette\n   * @link https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=757575&secondary.color=ff8a80&primary.text.color=ffffff&secondary.text.color=000000\n   */\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        \"main\": \"#757575\",\n        \"light\" : \"#a4a4a4\",\n        \"dark\" : \"#494949\",\n        \"contrastText\" : \"#ffffff\"\n      },\n      secondary: {\n        \"main\": \"#ff8a80\",\n        \"light\" : \"#ffbcaf\",\n        \"dark\" : \"#c85a54\",\n        \"contrastText\" : \"#000000\"\n      }\n    },\n    typography: {\n      fontFamily: [\n        'Roboto',\n      ].join(','),\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <Header />\n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            >\n              <Grid item xs={12}>\n                  <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/songs\" component={SongList} />\n                    <Route path=\"/new/:template\" component={CreateSong} />\n                    <Route path=\"/song/load?=:jsonJson\" component={ViewSong} />\n                    <Route path=\"/song/:id\" component={ViewSong} />\n                    <Route path=\"/songwriting101\" component={SongWriting101} />\n                    <Route payt=\"/layout\" component={SongFormGrid} />\n                    <Route component={NotFound} />\n                  </Switch>\n              </Grid>\n            </Grid>\n          <Footer />\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    ,\n    document.getElementById('root')\n );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}